<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://stevenrotelli.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://stevenrotelli.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-09-04T17:28:51+00:00</updated><id>https://stevenrotelli.github.io/feed.xml</id><title type="html">blank</title><subtitle>About me. </subtitle><entry><title type="html">Automating Mill Test Reports</title><link href="https://stevenrotelli.github.io/blog/2024/mill-test-reports/" rel="alternate" type="text/html" title="Automating Mill Test Reports"/><published>2024-08-28T15:59:00+00:00</published><updated>2024-08-28T15:59:00+00:00</updated><id>https://stevenrotelli.github.io/blog/2024/mill-test-reports</id><content type="html" xml:base="https://stevenrotelli.github.io/blog/2024/mill-test-reports/"><![CDATA[<h2 id="what-is-a-mill-test-report">What is a Mill Test Report</h2> <p>A mill test report (MTR) often also called a certified mill test report, certified material test report, mill test certificate (MTC), inspection certificate, or certificate of test, is a quality assurance document used in the metals industry, that certifies the material’s chemical and physical properties, and states that the product complies with international standards such as ASTM, ASME, ISO, etc.</p> <p>A mill test report is typically generated by the mill that created the material and is done by performing a variety of mechanical stresses/breaks, and mass spectrometry. The report will show the elemental weights as carbon, phosphorus, silicon, etc, and the results of various mechanical tests. The material is tracked through unique identifiers such as its Heat ID or some Item/product ID. to the front matter of the post. The table of contents will be automatically generated from the headings in the post.</p> <p><strong>sample image</strong></p> <div> <figure> <picture> <img src="/assets/img/posts/mtr/mtr-example.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <h2 id="challenges">Challenges</h2> <p>Whether a business is manufacturing, redistributing, or making parts from metals, it becomes incumbent upon that business to certify or re-certify the Material Test Report.</p> <p>When a customer receives this document, usually as part of their receiving packet, they must validate that the data contained from the mill or third party is accurate and must re-certify the MTR. This is done for a large variety of reasons including:</p> <ul> <li>Ensure that the material doesn’t fail structurally.</li> <li>Proof to secure bids or contracts.</li> <li>Early problem detection.</li> <li>Negotiate pricing on un-compliant metal.</li> <li>Prevent liability or litigation in the event of material failure.</li> </ul> <p>This use case is largely motivated by loss avoidance and government regulation, but the process manufacturers or mills are slow and at risk of error. The recertification of an MTR is typically performed by a knowledge worker, metallurgist, or material engineer; often this process is done manually, by locating the material standard, designation, type on the MTR, and the reference document published by the international body.</p> <p>For instance, the following MTR has the following description.</p> <div> <figure> <picture> <img src="/assets/img/posts/mtr/mtr-example-zoom.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <p>From this we know that the standard is ASTM, the designation is A 572, the grade is 65 [450], the type is 3, and the year is 2013. You can learn about how this breakdown occurs in the Handbook of World Steel Standards, on page 18.</p> <p>The worker then refers to the documentation for the standard, the standard must be purchased again from the international body i.e. ASTM every time there is a new revision, usually 3 years. Clients often prefer to certify to the latest year they have, and not the year found on the document.</p> <p>Here is a copy of the ASTM A572-21, that would allow a worker to determine if this MTR is accurate. Page 2 shows us the Chemical Requirements that could be used to validate the chemistry</p> <div> <figure> <picture> <img src="/assets/img/posts/mtr/astm-572-chem.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <p>The current way of validating is 100% manual reading both the <strong>MTR</strong> and the <strong>Designation</strong> document and checking that the chemistry or property is valid. Some organizations have developed they’re own excel spreadsheets that have validation rules, but the process is still manual, error prone, and slow.</p> <p>The standards that yield from an international body are many and complex bringing in they’re own sets of complexity and matricices.</p> <pre><code class="language-chartjs">{
  "type": "bar",
  "data": {
    "labels": ["Carbon", "Manganese", "Phosphorus", "Sulfur", "Silicon"],
    "datasets": [
      {
        "label": "Grade 42",
        "data": [
          {"x": "Carbon", "o": 0.18, "h": 0.21, "l": 0.18, "c": 0.21},
          {"x": "Manganese", "o": 0.9, "h": 1.35, "l": 0.9, "c": 1.35},
          {"x": "Phosphorus", "o": 0.025, "h": 0.030, "l": 0.025, "c": 0.030},
          {"x": "Sulfur", "o": 0.025, "h": 0.030, "l": 0.025, "c": 0.030},
          {"x": "Silicon", "o": 0.15, "h": 0.40, "l": 0.15, "c": 0.40}
        ],
        "borderColor": "rgba(75,192,192,1)",
        "backgroundColor": "rgba(75,192,192,0.4)"
      },
      {
        "label": "Grade 50",
        "data": [
          {"x": "Carbon", "o": 0.18, "h": 0.23, "l": 0.18, "c": 0.23},
          {"x": "Manganese", "o": 0.9, "h": 1.35, "l": 0.9, "c": 1.35},
          {"x": "Phosphorus", "o": 0.025, "h": 0.030, "l": 0.025, "c": 0.030},
          {"x": "Sulfur", "o": 0.025, "h": 0.030, "l": 0.025, "c": 0.030},
          {"x": "Silicon", "o": 0.15, "h": 0.40, "l": 0.15, "c": 0.40}
        ],
        "borderColor": "rgba(192,75,192,1)",
        "backgroundColor": "rgba(192,75,192,0.4)"
      },
      {
        "label": "Grade 55",
        "data": [
          {"x": "Carbon", "o": 0.18, "h": 0.25, "l": 0.18, "c": 0.25},
          {"x": "Manganese", "o": 0.9, "h": 1.35, "l": 0.9, "c": 1.35},
          {"x": "Phosphorus", "o": 0.025, "h": 0.030, "l": 0.025, "c": 0.030},
          {"x": "Sulfur", "o": 0.025, "h": 0.030, "l": 0.025, "c": 0.030},
          {"x": "Silicon", "o": 0.15, "h": 0.40, "l": 0.15, "c": 0.40}
        ],
        "borderColor": "rgba(75,75,192,1)",
        "backgroundColor": "rgba(75,75,192,0.4)"
      },
      {
        "label": "Grade 60",
        "data": [
          {"x": "Carbon", "o": 0.18, "h": 0.26, "l": 0.18, "c": 0.26},
          {"x": "Manganese", "o": 0.9, "h": 1.35, "l": 0.9, "c": 1.35},
          {"x": "Phosphorus", "o": 0.025, "h": 0.030, "l": 0.025, "c": 0.030},
          {"x": "Sulfur", "o": 0.025, "h": 0.030, "l": 0.025, "c": 0.030},
          {"x": "Silicon", "o": 0.15, "h": 0.40, "l": 0.15, "c": 0.40}
        ],
        "borderColor": "rgba(192,192,75,1)",
        "backgroundColor": "rgba(192,192,75,0.4)"
      },
      {
        "label": "Grade 65",
        "data": [
          {"x": "Carbon", "o": 0.18, "h": 0.26, "l": 0.18, "c": 0.26},
          {"x": "Manganese", "o": 0.9, "h": 1.65, "l": 0.9, "c": 1.65},
          {"x": "Phosphorus", "o": 0.025, "h": 0.030, "l": 0.025, "c": 0.030},
          {"x": "Sulfur", "o": 0.025, "h": 0.030, "l": 0.025, "c": 0.030},
          {"x": "Silicon", "o": 0.15, "h": 0.40, "l": 0.15, "c": 0.40}
        ],
        "borderColor": "rgba(75,192,75,1)",
        "backgroundColor": "rgba(75,192,75,0.4)"
      }
    ]
  },
  "options": {
    "scales": {
      "y": {
        "beginAtZero": true,
        "title": {
          "display": true,
          "text": "Percentage (%)"
        }
      },
      "x": {
        "title": {
          "display": true,
          "text": "Chemical Element"
        }
      }
    }
  }
}
</code></pre> <p>Based on my analysis, after reading several dozen of these standards I think we can ontologically breakdown</p> <h3 id="standard-bodies">Standard Bodies</h3> <p><strong>ASTM International (ASTM)</strong></p> <p>Formerly known as the American Society for Testing and Materials, ASTM is a globally recognized leader in the development and delivery of international voluntary consensus standards, including those for steel.</p> <p><strong>International Organization for Standardization (ISO)</strong></p> <p>ISO develops and publishes international standards for a wide range of industries, including the steel industry. ISO standards for steel cover everything from material properties to testing methods.</p> <p><strong>European Committee for Standardization (CEN)</strong></p> <p>CEN is responsible for developing European Standards (ENs) across various sectors, including steel. CEN standards are recognized across Europe and often harmonize with or complement ISO standards.</p> <p><strong>International Electrotechnical Commission (IEC)</strong></p> <p>While primarily focused on electrical and electronic standards, IEC also deals with standards related to steel used in electrical equipment and components.</p> <p><strong>American Iron and Steel Institute (AISI)</strong></p> <p>AISI is a U.S.-based organization that, among other things, develops standards and specifications for steel products, particularly in the context of construction and manufacturing.</p> <p><strong>Japanese Industrial Standards Committee (JISC)</strong></p> <p>JISC is responsible for developing Japanese Industrial Standards (JIS) for various materials, including steel. JIS standards are widely used in Japan and other regions.</p> <p><strong>Deutsches Institut für Normung (DIN)</strong></p> <p>DIN is the German national organization for standardization and develops DIN standards, which include specifications for steel materials and products.</p> <p><strong>British Standards Institution (BSI)</strong></p> <p>BSI develops and publishes British Standards, including those related to steel, which are used in the UK and internationally.</p> <p><strong>Russian Federal Agency on Technical Regulating and Metrology (Rosstandart)</strong></p> <p>Rosstandart is responsible for developing GOST standards in Russia, which include specifications for steel.</p> <p><strong>Bureau of Indian Standards (BIS)</strong></p> <p>BIS develops Indian Standards (IS) for various materials, including steel, and plays a key role in standardization in India.</p> <p><strong>China Iron and Steel Association (CISA)</strong></p> <p>CISA, in conjunction with other Chinese regulatory bodies, contributes to the development of standards for the steel industry in China.</p> <p><strong>Association Française de Normalisation (AFNOR)</strong></p> <p>AFNOR is the French standardization body responsible for developing and publishing French standards, including those for steel.</p> <p><strong>Standards Australia</strong></p> <p>Standards Australia is the national standards organization in Australia and is responsible for developing Australian Standards, including those for steel products.</p> <p><strong>Standards Council of Canada (SCC)</strong></p> <p>SCC is responsible for overseeing the development of standards in Canada, including those related to steel.</p> <p>Many MTRs have multiple ways of presenting data, some tables are combined often to condense information on the page, as shown with the documents</p> <div> <figure> <picture> <img src="/assets/img/posts/mtr/mtr-example-table.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <p>You can see that some of the properties like <strong>Shear</strong> are itterative this is not always the case, but we want to model the data in a way that could cover most MTRs</p> <h3 id="tests">Tests</h3> <p><strong>Chemistry</strong></p> <details><summary>Click to see sample table</summary> <table> <thead> <tr> <th>C</th> <th>Mn</th> <th>Si</th> <th>P</th> <th>S</th> <th>Cr</th> <th>Ni</th> <th>Mo</th> <th>Cu</th> <th>Ti</th> <th>V</th> <th>N</th> <th>N2</th> <th>Al</th> <th>Ca</th> <th>B</th> <th>Sn</th> <th>As</th> <th>Sb</th> <th>Zr</th> <th>Nb</th> <th>Co</th> <th>Pb</th> <th>Fe</th> <th>Bi</th> <th>Ta</th> <th>Zn</th> <th>Se</th> <th>W</th> <th>Ce</th> <th>La</th> <th>Mg</th> <th>Ag</th> <th>H</th> <th>O</th> <th>Be</th> <th>Ga</th> <th>Hf</th> <th>In</th> <th>Li</th> <th>Re</th> <th>Ru</th> <th>Te</th> <th>Y</th> <th>Yb</th> <th>MnS</th> <th>WC</th> <th>TiC</th> <th>CEQ</th> <th>CI</th> </tr> </thead> <tbody> <tr> <td>0.20</td> <td>1.00</td> <td>0.30</td> <td>0.015</td> <td>0.005</td> <td>0.50</td> <td>0.40</td> <td>0.25</td> <td>0.30</td> <td>0.010</td> <td>0.005</td> <td>0.01</td> <td>0.002</td> <td>0.005</td> <td>0.001</td> <td>0.002</td> <td>0.10</td> <td>0.05</td> <td>0.002</td> <td>0.001</td> <td>0.002</td> <td>0.010</td> <td>0.001</td> <td>Bal</td> <td>0.0001</td> <td>0.001</td> <td>0.001</td> <td>0.005</td> <td>0.002</td> <td>0.003</td> <td>0.001</td> <td>0.005</td> <td>0.001</td> <td>0.002</td> <td>0.0001</td> <td>0.002</td> <td>0.002</td> <td>0.001</td> <td>0.002</td> <td>0.001</td> <td>0.002</td> <td>0.001</td> <td>0.002</td> <td>0.002</td> <td>0.002</td> <td>0.002</td> <td>0.002</td> <td>0.002</td> <td>0.02</td> <td>0.002</td> </tr> </tbody> </table> </details> <p><strong>Major Elements</strong></p> <p>These elements are present in significant quantities and define the primary composition of the material.</p> <ul> <li><strong>C (Carbon)</strong></li> <li><strong>Mn (Manganese)</strong></li> <li><strong>Si (Silicon)</strong></li> <li><strong>P (Phosphorus)</strong></li> <li><strong>S (Sulfur)</strong></li> </ul> <p><strong>Alloying Elements</strong></p> <p>These elements are added to impart specific properties to the material, such as strength, hardness, or corrosion resistance.</p> <ul> <li><strong>Cr (Chromium)</strong></li> <li><strong>Ni (Nickel)</strong></li> <li><strong>Mo (Molybdenum)</strong></li> <li><strong>Cu (Copper)</strong></li> <li><strong>Ti (Titanium)</strong></li> <li><strong>V (Vanadium)</strong></li> <li><strong>Nb (Niobium)</strong></li> <li><strong>Co (Cobalt)</strong></li> <li><strong>W (Tungsten)</strong></li> <li><strong>Ta (Tantalum)</strong></li> <li><strong>Zr (Zirconium)</strong></li> <li><strong>Re (Rhenium)</strong></li> <li><strong>Hf (Hafnium)</strong></li> </ul> <p><strong>Microalloying Elements</strong></p> <p>These are added in very small amounts to refine the grain size and improve the mechanical properties.</p> <ul> <li><strong>N (Nitrogen)</strong></li> <li><strong>B (Boron)</strong></li> <li><strong>Ca (Calcium)</strong></li> <li><strong>Al (Aluminum)</strong></li> </ul> <p><strong>Impurities and Tramp Elements</strong></p> <p>These elements are typically present in very small amounts and can adversely affect the properties if not controlled.</p> <ul> <li><strong>Pb (Lead)</strong></li> <li><strong>Bi (Bismuth)</strong></li> <li><strong>Sb (Antimony)</strong></li> <li><strong>As (Arsenic)</strong></li> <li><strong>Sn (Tin)</strong></li> <li><strong>O (Oxygen)</strong></li> <li><strong>H (Hydrogen)</strong></li> <li><strong>Se (Selenium)</strong></li> <li><strong>Te (Tellurium)</strong></li> <li><strong>Li (Lithium)</strong></li> <li><strong>In (Indium)</strong></li> </ul> <p><strong>Residual and Trace Elements</strong></p> <p>These elements are typically present in trace amounts as a result of the raw materials used in the manufacturing process.</p> <ul> <li><strong>Zn (Zinc)</strong></li> <li><strong>Ag (Silver)</strong></li> <li><strong>Mg (Magnesium)</strong></li> <li><strong>Ce (Cerium)</strong></li> <li><strong>La (Lanthanum)</strong></li> <li><strong>Y (Yttrium)</strong></li> <li><strong>Yb (Ytterbium)</strong></li> <li><strong>Ru (Ruthenium)</strong></li> <li><strong>Ga (Gallium)</strong></li> </ul> <p><strong>Special Considerations</strong></p> <p>Some elements may have specific designations based on their role or required precision in certain applications.</p> <ul> <li><strong>MnS (Manganese Sulfide)</strong></li> <li><strong>WC (Tungsten Carbide)</strong></li> <li><strong>TiC (Titanium Carbide)</strong></li> <li><strong>CEQ (Carbon Equivalent)</strong></li> </ul> <p><strong>Tensile Properties</strong></p> <details><summary>Click to see sample table</summary> <table> <thead> <tr> <th>Heat ID</th> <th>Length</th> <th>Temp</th> <th>Direction</th> <th>Yield Strength1</th> <th>Yield Strength2</th> <th>Yield Strength3</th> <th>Yield StrengthAvg</th> <th>UTS1</th> <th>UTS2</th> <th>UTS3</th> <th>UTSAvg</th> <th>Elongation1</th> <th>Elongation2</th> <th>Elongation3</th> <th>ElongationAvg</th> <th>ROA1</th> <th>ROA2</th> <th>ROA3</th> <th>ROAAvg</th> <th>MOE1</th> <th>MOE2</th> <th>MOE3</th> <th>MOEAvg</th> </tr> </thead> <tbody> <tr> <td>A123</td> <td>100 mm</td> <td>20°C</td> <td>Longitudinal</td> <td>450 MPa</td> <td>460 MPa</td> <td>455 MPa</td> <td>455 MPa</td> <td>600 MPa</td> <td>610 MPa</td> <td>605 MPa</td> <td>605 MPa</td> <td>20%</td> <td>21%</td> <td>20.5%</td> <td>20.5%</td> <td>40%</td> <td>41%</td> <td>40.5%</td> <td>40.5%</td> <td>210 GPa</td> <td>215 GPa</td> <td>212 GPa</td> <td>212 GPa</td> </tr> </tbody> </table> </details> <p><strong>Charpy Impact Test</strong></p> <details><summary>Click to see sample table</summary> <table> <thead> <tr> <th>Heat ID</th> <th>Length</th> <th>Temp</th> <th>Direction</th> <th>Energy1</th> <th>Energy2</th> <th>Energy3</th> <th>EnergyAvg</th> <th>Shear1</th> <th>Shear2</th> <th>Shear3</th> <th>ShearAvg</th> <th>Lateral Expansion1</th> <th>Lateral Expansion2</th> <th>Lateral Expansion3</th> <th>Lateral ExpansionAvg</th> </tr> </thead> <tbody> <tr> <td>A123</td> <td>10 mm</td> <td>-20°C</td> <td>Transverse</td> <td>12 J</td> <td>15 J</td> <td>14 J</td> <td>13.67 J</td> <td>60%</td> <td>62%</td> <td>61%</td> <td>61%</td> <td>0.5 mm</td> <td>0.6 mm</td> <td>0.55 mm</td> <td>0.55 mm</td> </tr> </tbody> </table> </details> <p><strong>Bend Test</strong></p> <details><summary>Click to see sample table</summary> <table> <thead> <tr> <th>Heat ID</th> <th>Length</th> <th>Temp</th> <th>Direction</th> <th>Angle1</th> <th>Angle2</th> <th>Angle3</th> <th>AngleAvg</th> <th>Radius1</th> <th>Radius2</th> <th>Radius3</th> <th>RadiusAvg</th> </tr> </thead> <tbody> <tr> <td>A123</td> <td>100 mm</td> <td>20°C</td> <td>Longitudinal</td> <td>90°</td> <td>92°</td> <td>91°</td> <td>91°</td> <td>10 mm</td> <td>11 mm</td> <td>10.5 mm</td> <td>10.5 mm</td> </tr> </tbody> </table> </details> <p><strong>Hardness Test</strong></p> <details><summary>Click to see sample table</summary> <table> <thead> <tr> <th>Heat ID</th> <th>Length</th> <th>Temp</th> <th>Direction</th> <th>HRC1</th> <th>HRC2</th> <th>HRC3</th> <th>HRCAvg</th> <th>HRB1</th> <th>HRB2</th> <th>HRB3</th> <th>HRBAvg</th> <th>Brinell1</th> <th>Brinell2</th> <th>Brinell3</th> <th>BrinellAvg</th> <th>Vickers1</th> <th>Vickers2</th> <th>Vickers3</th> <th>VickersAvg</th> </tr> </thead> <tbody> <tr> <td>A123</td> <td>10 mm</td> <td>20°C</td> <td>Random</td> <td>45</td> <td>46</td> <td>45.5</td> <td>45.5</td> <td>85</td> <td>86</td> <td>85.5</td> <td>85.5</td> <td>250</td> <td>255</td> <td>252.5</td> <td>252.5</td> <td>500</td> <td>505</td> <td>502.5</td> <td>502.5</td> </tr> </tbody> </table> </details> <p><strong>BDWTT</strong></p> <details><summary>Click to see sample table</summary> <table> <thead> <tr> <th>Heat ID</th> <th>Length</th> <th>Temp</th> <th>Direction</th> <th>Shear Fracture Area1</th> <th>Shear Fracture Area2</th> <th>Shear Fracture Area3</th> <th>Shear Fracture AreaAvg</th> <th>Energy Absorbed1</th> <th>Energy Absorbed2</th> <th>Energy Absorbed3</th> <th>Energy AbsorbedAvg</th> </tr> </thead> <tbody> <tr> <td>A123</td> <td>100 mm</td> <td>-40°C</td> <td>Longitudinal</td> <td>75%</td> <td>77%</td> <td>76%</td> <td>76%</td> <td>150 J</td> <td>155 J</td> <td>152.5 J</td> <td>152.5 J</td> </tr> </tbody> </table> </details> <p><strong>Microstructure</strong></p> <details><summary>Click to see sample table</summary> <table> <thead> <tr> <th>Heat ID</th> <th>Length</th> <th>Temp</th> <th>Direction</th> <th>Grain Size1</th> <th>Grain Size2</th> <th>Grain Size3</th> <th>Grain SizeAvg</th> <th>Inclusion Content1</th> <th>Inclusion Content2</th> <th>Inclusion Content3</th> <th>Inclusion ContentAvg</th> <th>Phase Distribution1</th> <th>Phase Distribution2</th> <th>Phase Distribution3</th> <th>Phase DistributionAvg</th> <th>Microhardness1</th> <th>Microhardness2</th> <th>Microhardness3</th> <th>MicrohardnessAvg</th> </tr> </thead> <tbody> <tr> <td>A123</td> <td>10 mm</td> <td>20°C</td> <td>Random</td> <td>5</td> <td>6</td> <td>5.5</td> <td>5.5</td> <td>1</td> <td>1.5</td> <td>1.25</td> <td>1.25</td> <td>50%</td> <td>52%</td> <td>51%</td> <td>51%</td> <td>250 HV</td> <td>255 HV</td> <td>252.5 HV</td> <td>252.5 HV</td> </tr> </tbody> </table> </details> <p><strong>Jominy End Quench Test</strong></p> <details><summary>Click to see sample table</summary> <table> <thead> <tr> <th>Heat ID</th> <th>Length</th> <th>Temp</th> <th>Direction</th> <th>Distance from Quenched End1</th> <th>Distance from Quenched End2</th> <th>Distance from Quenched End3</th> <th>Hardness1</th> <th>Hardness2</th> <th>Hardness3</th> </tr> </thead> <tbody> <tr> <td>A123</td> <td>100 mm</td> <td>20°C</td> <td>Longitudinal</td> <td>10 mm</td> <td>20 mm</td> <td>30 mm</td> <td>45 HRC</td> <td>44 HRC</td> <td>43 HRC</td> </tr> </tbody> </table> </details> <p><strong>Corrosion Resistance Test</strong></p> <details><summary>Click to see sample table</summary> <table> <thead> <tr> <th>Heat ID</th> <th>Length</th> <th>Temp</th> <th>Direction</th> <th>Pitting Corrosion1</th> <th>Pitting Corrosion2</th> <th>Pitting Corrosion3</th> <th>Pitting CorrosionAvg</th> <th>Intergranular Corrosion1</th> <th>Intergranular Corrosion2</th> <th>Intergranular Corrosion3</th> <th>Intergranular CorrosionAvg</th> <th>Salt Spray Test1</th> <th>Salt Spray Test2</th> <th>Salt Spray Test3</th> <th>Salt Spray TestAvg</th> </tr> </thead> <tbody> <tr> <td>A123</td> <td>10 mm</td> <td>20°C</td> <td>Random</td> <td>5</td> <td>6</td> <td>5.5</td> <td>5.5</td> <td>2</td> <td>2.5</td> <td>2.25</td> <td>2.25</td> <td>48 hours</td> <td>50 hours</td> <td>49 hours</td> <td>49 hours</td> </tr> </tbody> </table> </details> <p><strong>Fatigue Test</strong></p> <details><summary>Click to see sample table</summary> <table> <thead> <tr> <th>Heat ID</th> <th>Length</th> <th>Temp</th> <th>Direction</th> <th>Fatigue Limit1</th> <th>Fatigue Limit2</th> <th>Fatigue Limit3</th> <th>Fatigue LimitAvg</th> <th>Cycles to Failure1</th> <th>Cycles to Failure2</th> <th>Cycles to Failure3</th> <th>Cycles to FailureAvg</th> <th>Load Amplitude1</th> <th>Load Amplitude2</th> <th>Load Amplitude3</th> <th>Load AmplitudeAvg</th> <th>Stress Ratio1</th> <th>Stress Ratio2</th> <th>Stress Ratio3</th> <th>Stress RatioAvg</th> </tr> </thead> <tbody> <tr> <td>A123</td> <td>100 mm</td> <td>20°C</td> <td>Longitudinal</td> <td>300 MPa</td> <td>310 MPa</td> <td>305 MPa</td> <td>305 MPa</td> <td>100000</td> <td>110000</td> <td>105000</td> <td>105000</td> <td>50 MPa</td> <td>55 MPa</td> <td>52.5 MPa</td> <td>52.5 MPa</td> <td>0.5</td> <td>0.6</td> <td>0.55</td> <td>0.55</td> </tr> </tbody> </table> </details> <p><strong>Weldability Test</strong></p> <details><summary>Click to see sample table</summary> <table> <thead> <tr> <th>Heat ID</th> <th>Length</th> <th>Temp</th> <th>Direction</th> <th>Weld Strength1</th> <th>Weld Strength2</th> <th>Weld Strength3</th> <th>Weld StrengthAvg</th> <th>Weld Toughness1</th> <th>Weld Toughness2</th> <th>Weld Toughness3</th> <th>Weld ToughnessAvg</th> <th>HAZ Properties1</th> <th>HAZ Properties2</th> <th>HAZ Properties3</th> <th>HAZ PropertiesAvg</th> </tr> </thead> <tbody> <tr> <td>A123</td> <td>100 mm</td> <td>20°C</td> <td>Longitudinal</td> <td>500 MPa</td> <td>510 MPa</td> <td>505 MPa</td> <td>505 MPa</td> <td>60 J</td> <td>62 J</td> <td>61 J</td> <td>61 J</td> <td>250 HV</td> <td>255 HV</td> <td>252.5 HV</td> <td>252.5 HV</td> </tr> </tbody> </table> </details> <h2 id="solution">Solution</h2>]]></content><author><name></name></author><category term="work"/><category term="grooper"/><summary type="html"><![CDATA[Understanding, and automating mill test reports with Grooper.]]></summary></entry><entry><title type="html">Google Gemini updates: Flash 1.5, Gemma 2 and Project Astra</title><link href="https://stevenrotelli.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra/" rel="alternate" type="text/html" title="Google Gemini updates: Flash 1.5, Gemma 2 and Project Astra"/><published>2024-05-14T00:00:00+00:00</published><updated>2024-05-14T00:00:00+00:00</updated><id>https://stevenrotelli.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra</id><content type="html" xml:base="https://stevenrotelli.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra/"><![CDATA[]]></content><author><name></name></author><summary type="html"><![CDATA[We’re sharing updates across our Gemini family of models and a glimpse of Project Astra, our vision for the future of AI assistants.]]></summary></entry><entry><title type="html">a post with tabs</title><link href="https://stevenrotelli.github.io/blog/2024/tabs/" rel="alternate" type="text/html" title="a post with tabs"/><published>2024-05-01T00:32:13+00:00</published><updated>2024-05-01T00:32:13+00:00</updated><id>https://stevenrotelli.github.io/blog/2024/tabs</id><content type="html" xml:base="https://stevenrotelli.github.io/blog/2024/tabs/"><![CDATA[<p>This is how a post with <a href="https://github.com/Ovski4/jekyll-tabs">tabs</a> looks like. Note that the tabs could be used for different purposes, not only for code.</p> <h2 id="first-tabs">First tabs</h2> <p>To add tabs, use the following syntax:</p> <div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">{%</span><span class="w"> </span><span class="nt">tabs</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">tab</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="nv">tab-name-1</span><span class="w"> </span><span class="cp">%}</span>

Content 1

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtab</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">tab</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="nv">tab-name-2</span><span class="w"> </span><span class="cp">%}</span>

Content 2

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtab</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtabs</span><span class="w"> </span><span class="cp">%}</span>
</code></pre></div></div> <p>With this you can generate visualizations like:</p> <ul id="log" class="tab" data-tab="0bd7c395-107f-41b6-8ab3-717c66348d5e" data-name="log"> <li class="active" id="log-php"> <a href="#">php </a> </li> <li id="log-js"> <a href="#">js </a> </li> <li id="log-ruby"> <a href="#">ruby </a> </li> </ul> <ul class="tab-content" id="0bd7c395-107f-41b6-8ab3-717c66348d5e" data-name="log"> <li class="active"> <div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">var_dump</span><span class="p">(</span><span class="s1">'hello'</span><span class="p">);</span>
</code></pre></div></div> </li> <li> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">hello</span><span class="dl">"</span><span class="p">);</span>
</code></pre></div></div> </li> <li> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">pputs</span> <span class="dl">'</span><span class="s1">hello</span><span class="dl">'</span>
</code></pre></div></div> </li> </ul> <h2 id="another-example">Another example</h2> <ul id="data-struct" class="tab" data-tab="b03f490a-305d-4d1a-9a25-4f0ba1d351aa" data-name="data-struct"> <li class="active" id="data-struct-yaml"> <a href="#">yaml </a> </li> <li id="data-struct-json"> <a href="#">json </a> </li> </ul> <ul class="tab-content" id="b03f490a-305d-4d1a-9a25-4f0ba1d351aa" data-name="data-struct"> <li class="active"> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">hello</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">whatsup"</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">hi"</span>
</code></pre></div></div> </li> <li> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"hello"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"whatsup"</span><span class="p">,</span><span class="w"> </span><span class="s2">"hi"</span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> </li> </ul> <h2 id="tabs-for-something-else">Tabs for something else</h2> <ul id="something-else" class="tab" data-tab="16b7fa13-fd0c-4a7e-aedf-a4bf08a2ab1d" data-name="something-else"> <li class="active" id="something-else-text"> <a href="#">text </a> </li> <li id="something-else-quote"> <a href="#">quote </a> </li> <li id="something-else-list"> <a href="#">list </a> </li> </ul> <ul class="tab-content" id="16b7fa13-fd0c-4a7e-aedf-a4bf08a2ab1d" data-name="something-else"> <li class="active"> <p>Regular text</p> </li> <li> <blockquote> <p>A quote</p> </blockquote> </li> <li> <p>Hipster list</p> <ul> <li>brunch</li> <li>fixie</li> <li>raybans</li> <li>messenger bag</li> </ul> </li> </ul>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[this is what included tabs in a post could look like]]></summary></entry><entry><title type="html">a post with typograms</title><link href="https://stevenrotelli.github.io/blog/2024/typograms/" rel="alternate" type="text/html" title="a post with typograms"/><published>2024-04-29T23:36:10+00:00</published><updated>2024-04-29T23:36:10+00:00</updated><id>https://stevenrotelli.github.io/blog/2024/typograms</id><content type="html" xml:base="https://stevenrotelli.github.io/blog/2024/typograms/"><![CDATA[<p>This is an example post with some <a href="https://github.com/google/typograms/">typograms</a> code.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">typograms
</span><span class="sb">+----+
|    |---&gt; My first diagram!
+----+</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-typograms">+----+
|    |---&gt; My first diagram!
+----+
</code></pre> <p>Another example:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">typograms
</span><span class="sb">.------------------------.
|.----------------------.|
||"https://example.com" ||
|'----------------------'|
| ______________________ |
||                      ||
||   Welcome!           ||
||                      ||
||                      ||
||  .----------------.  ||
||  | username       |  ||
||  '----------------'  ||
||  .----------------.  ||
||  |"*******"       |  ||
||  '----------------'  ||
||                      ||
||  .----------------.  ||
||  |   "Sign-up"    |  ||
||  '----------------'  ||
||                      ||
|+----------------------+|
.------------------------.</span>
<span class="p">```</span>
</code></pre></div></div> <p>which generates:</p> <pre><code class="language-typograms">.------------------------.
|.----------------------.|
||"https://example.com" ||
|'----------------------'|
| ______________________ |
||                      ||
||   Welcome!           ||
||                      ||
||                      ||
||  .----------------.  ||
||  | username       |  ||
||  '----------------'  ||
||  .----------------.  ||
||  |"*******"       |  ||
||  '----------------'  ||
||                      ||
||  .----------------.  ||
||  |   "Sign-up"    |  ||
||  '----------------'  ||
||                      ||
|+----------------------+|
.------------------------.
</code></pre> <p>For more examples, check out the <a href="https://google.github.io/typograms/#examples">typograms documentation</a>.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="diagrams"/><summary type="html"><![CDATA[this is what included typograms code could look like]]></summary></entry><entry><title type="html">a post that can be cited</title><link href="https://stevenrotelli.github.io/blog/2024/post-citation/" rel="alternate" type="text/html" title="a post that can be cited"/><published>2024-04-28T15:06:00+00:00</published><updated>2024-04-28T15:06:00+00:00</updated><id>https://stevenrotelli.github.io/blog/2024/post-citation</id><content type="html" xml:base="https://stevenrotelli.github.io/blog/2024/post-citation/"><![CDATA[<p>This is an example post that can be cited. The content of the post ends here, while the citation information is automatically provided below. The only thing needed is for you to set the <code class="language-plaintext highlighter-rouge">citation</code> key in the front matter to <code class="language-plaintext highlighter-rouge">true</code>.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="citation"/><summary type="html"><![CDATA[this is what a post that can be cited looks like]]></summary></entry><entry><title type="html">a post with pseudo code</title><link href="https://stevenrotelli.github.io/blog/2024/pseudocode/" rel="alternate" type="text/html" title="a post with pseudo code"/><published>2024-04-15T00:01:00+00:00</published><updated>2024-04-15T00:01:00+00:00</updated><id>https://stevenrotelli.github.io/blog/2024/pseudocode</id><content type="html" xml:base="https://stevenrotelli.github.io/blog/2024/pseudocode/"><![CDATA[<p>This is an example post with some pseudo code rendered by <a href="https://github.com/SaswatPadhi/pseudocode.js">pseudocode</a>. The example presented here is the same as the one in the <a href="https://saswat.padhi.me/pseudocode.js/">pseudocode.js</a> documentation, with only one simple but important change: everytime you would use <code class="language-plaintext highlighter-rouge">$</code>, you should use <code class="language-plaintext highlighter-rouge">$$</code> instead. Also, note that the <code class="language-plaintext highlighter-rouge">pseudocode</code> key in the front matter is set to <code class="language-plaintext highlighter-rouge">true</code> to enable the rendering of pseudo code. As an example, using this code:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">pseudocode
</span><span class="sb">% This quicksort algorithm is extracted from Chapter 7, Introduction to Algorithms (3rd edition)
\begin{algorithm}
\caption{Quicksort}
\begin{algorithmic}
\PROCEDURE{Quicksort}{$$A, p, r$$}
    \IF{$$p &lt; r$$}
        \STATE $$q = $$ \CALL{Partition}{$$A, p, r$$}
        \STATE \CALL{Quicksort}{$$A, p, q - 1$$}
        \STATE \CALL{Quicksort}{$$A, q + 1, r$$}
    \ENDIF
\ENDPROCEDURE
\PROCEDURE{Partition}{$$A, p, r$$}
    \STATE $$x = A[r]$$
    \STATE $$i = p - 1$$
    \FOR{$$j = p$$ \TO $$r - 1$$}
        \IF{$$A[j] &lt; x$$}
            \STATE $$i = i + 1$$
            \STATE exchange
            $$A[i]$$ with $$A[j]$$
        \ENDIF
        \STATE exchange $$A[i]$$ with $$A[r]$$
    \ENDFOR
\ENDPROCEDURE
\end{algorithmic}
\end{algorithm}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Generates:</p> <pre><code class="language-pseudocode">% This quicksort algorithm is extracted from Chapter 7, Introduction to Algorithms (3rd edition)
\begin{algorithm}
\caption{Quicksort}
\begin{algorithmic}
\PROCEDURE{Quicksort}{$$A, p, r$$}
    \IF{$$p &lt; r$$}
        \STATE $$q = $$ \CALL{Partition}{$$A, p, r$$}
        \STATE \CALL{Quicksort}{$$A, p, q - 1$$}
        \STATE \CALL{Quicksort}{$$A, q + 1, r$$}
    \ENDIF
\ENDPROCEDURE
\PROCEDURE{Partition}{$$A, p, r$$}
    \STATE $$x = A[r]$$
    \STATE $$i = p - 1$$
    \FOR{$$j = p$$ \TO $$r - 1$$}
        \IF{$$A[j] &lt; x$$}
            \STATE $$i = i + 1$$
            \STATE exchange
            $$A[i]$$ with $$A[j]$$
        \ENDIF
        \STATE exchange $$A[i]$$ with $$A[r]$$
    \ENDFOR
\ENDPROCEDURE
\end{algorithmic}
\end{algorithm}
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[this is what included pseudo code could look like]]></summary></entry><entry><title type="html">a post with code diff</title><link href="https://stevenrotelli.github.io/blog/2024/code-diff/" rel="alternate" type="text/html" title="a post with code diff"/><published>2024-01-27T19:22:00+00:00</published><updated>2024-01-27T19:22:00+00:00</updated><id>https://stevenrotelli.github.io/blog/2024/code-diff</id><content type="html" xml:base="https://stevenrotelli.github.io/blog/2024/code-diff/"><![CDATA[<p>You can display diff code by using the regular markdown syntax:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">diff
</span><span class="gh">diff --git a/sample.js b/sample.js
index 0000001..0ddf2ba
</span><span class="gd">--- a/sample.js
</span><span class="gi">+++ b/sample.js
</span><span class="p">@@ -1 +1 @@</span>
<span class="gd">-console.log("Hello World!")
</span><span class="gi">+console.log("Hello from Diff2Html!")</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <div class="language-diff highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gh">diff --git a/sample.js b/sample.js
index 0000001..0ddf2ba
</span><span class="gd">--- a/sample.js
</span><span class="gi">+++ b/sample.js
</span><span class="p">@@ -1 +1 @@</span>
<span class="gd">-console.log("Hello World!")
</span><span class="gi">+console.log("Hello from Diff2Html!")
</span></code></pre></div></div> <p>But this is difficult to read, specially if you have a large diff. You can use <a href="https://diff2html.xyz/">diff2html</a> to display a more readable version of the diff. For this, just use <code class="language-plaintext highlighter-rouge">diff2html</code> instead of <code class="language-plaintext highlighter-rouge">diff</code> for the code block language:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">diff2html
</span><span class="sb">diff --git a/sample.js b/sample.js
index 0000001..0ddf2ba
--- a/sample.js
+++ b/sample.js
@@ -1 +1 @@
-console.log("Hello World!")
+console.log("Hello from Diff2Html!")</span>
<span class="p">```</span>
</code></pre></div></div> <p>If we use a longer example, for example <a href="https://github.com/rtfpessoa/diff2html/commit/c2c253d3e3f8b8b267f551e659f72b44ca2ac927">this commit from diff2html</a>, it will generate the following output:</p> <pre><code class="language-diff2html">From 2aaae31cc2a37bfff83430c2c914b140bee59b6a Mon Sep 17 00:00:00 2001
From: Rodrigo Fernandes &lt;rtfrodrigo@gmail.com&gt;
Date: Sun, 9 Oct 2016 16:41:54 +0100
Subject: [PATCH 1/2] Initial template override support

---
 scripts/hulk.js                    |  4 ++--
 src/diff2html.js                   |  3 +--
 src/file-list-printer.js           | 11 ++++++++---
 src/hoganjs-utils.js               | 29 +++++++++++++++++------------
 src/html-printer.js                |  6 ++++++
 src/line-by-line-printer.js        |  6 +++++-
 src/side-by-side-printer.js        |  6 +++++-
 test/file-list-printer-tests.js    |  2 +-
 test/hogan-cache-tests.js          | 18 +++++++++++++++---
 test/line-by-line-tests.js         |  3 +--
 test/side-by-side-printer-tests.js |  3 +--
 11 files changed, 62 insertions(+), 29 deletions(-)

diff --git a/scripts/hulk.js b/scripts/hulk.js
index 5a793c18..a4b1a4d5 100755
--- a/scripts/hulk.js
+++ b/scripts/hulk.js
@@ -173,11 +173,11 @@ function namespace(name) {
 // write a template foreach file that matches template extension
 templates = extractFiles(options.argv.remain)
   .map(function(file) {
-    var openedFile = fs.readFileSync(file, 'utf-8');
+    var openedFile = fs.readFileSync(file, 'utf-8').trim();
     var name;
     if (!openedFile) return;
     name = namespace(path.basename(file).replace(/\..*$/, ''));
-    openedFile = removeByteOrderMark(openedFile.trim());
+    openedFile = removeByteOrderMark(openedFile);
     openedFile = wrap(file, name, openedFile);
     if (!options.outputdir) return openedFile;
     fs.writeFileSync(path.join(options.outputdir, name + '.js')
diff --git a/src/diff2html.js b/src/diff2html.js
index 21b0119e..64e138f5 100644
--- a/src/diff2html.js
+++ b/src/diff2html.js
@@ -7,7 +7,6 @@

 (function() {
   var diffParser = require('./diff-parser.js').DiffParser;
-  var fileLister = require('./file-list-printer.js').FileListPrinter;
   var htmlPrinter = require('./html-printer.js').HtmlPrinter;

   function Diff2Html() {
@@ -43,7 +42,7 @@

     var fileList = '';
     if (configOrEmpty.showFiles === true) {
-      fileList = fileLister.generateFileList(diffJson, configOrEmpty);
+      fileList = htmlPrinter.generateFileListSummary(diffJson, configOrEmpty);
     }

     var diffOutput = '';
diff --git a/src/file-list-printer.js b/src/file-list-printer.js
index e408d9b2..1e0a2c61 100644
--- a/src/file-list-printer.js
+++ b/src/file-list-printer.js
@@ -8,11 +8,16 @@
 (function() {
   var printerUtils = require('./printer-utils.js').PrinterUtils;

-  var hoganUtils = require('./hoganjs-utils.js').HoganJsUtils;
+  var hoganUtils;
+
   var baseTemplatesPath = 'file-summary';
   var iconsBaseTemplatesPath = 'icon';

-  function FileListPrinter() {
+  function FileListPrinter(config) {
+    this.config = config;
+
+    var HoganJsUtils = require('./hoganjs-utils.js').HoganJsUtils;
+    hoganUtils = new HoganJsUtils(config);
   }

   FileListPrinter.prototype.generateFileList = function(diffFiles) {
@@ -38,5 +43,5 @@
     });
   };

-  module.exports.FileListPrinter = new FileListPrinter();
+  module.exports.FileListPrinter = FileListPrinter;
 })();
diff --git a/src/hoganjs-utils.js b/src/hoganjs-utils.js
index 9949e5fa..0dda08d7 100644
--- a/src/hoganjs-utils.js
+++ b/src/hoganjs-utils.js
@@ -8,18 +8,19 @@
 (function() {
   var fs = require('fs');
   var path = require('path');
-
   var hogan = require('hogan.js');

   var hoganTemplates = require('./templates/diff2html-templates.js');

-  var templatesPath = path.resolve(__dirname, 'templates');
+  var extraTemplates;

-  function HoganJsUtils() {
+  function HoganJsUtils(configuration) {
+    this.config = configuration || {};
+    extraTemplates = this.config.templates || {};
   }

-  HoganJsUtils.prototype.render = function(namespace, view, params, configuration) {
-    var template = this.template(namespace, view, configuration);
+  HoganJsUtils.prototype.render = function(namespace, view, params) {
+    var template = this.template(namespace, view);
     if (template) {
       return template.render(params);
     }
@@ -27,17 +28,16 @@
     return null;
   };

-  HoganJsUtils.prototype.template = function(namespace, view, configuration) {
-    var config = configuration || {};
+  HoganJsUtils.prototype.template = function(namespace, view) {
     var templateKey = this._templateKey(namespace, view);

-    return this._getTemplate(templateKey, config);
+    return this._getTemplate(templateKey);
   };

-  HoganJsUtils.prototype._getTemplate = function(templateKey, config) {
+  HoganJsUtils.prototype._getTemplate = function(templateKey) {
     var template;

-    if (!config.noCache) {
+    if (!this.config.noCache) {
       template = this._readFromCache(templateKey);
     }

@@ -53,6 +53,7 @@

     try {
       if (fs.readFileSync) {
+        var templatesPath = path.resolve(__dirname, 'templates');
         var templatePath = path.join(templatesPath, templateKey);
         var templateContent = fs.readFileSync(templatePath + '.mustache', 'utf8');
         template = hogan.compile(templateContent);
@@ -66,12 +67,16 @@
   };

   HoganJsUtils.prototype._readFromCache = function(templateKey) {
-    return hoganTemplates[templateKey];
+    return extraTemplates[templateKey] || hoganTemplates[templateKey];
   };

   HoganJsUtils.prototype._templateKey = function(namespace, view) {
     return namespace + '-' + view;
   };

-  module.exports.HoganJsUtils = new HoganJsUtils();
+  HoganJsUtils.prototype.compile = function(templateStr) {
+    return hogan.compile(templateStr);
+  };
+
+  module.exports.HoganJsUtils = HoganJsUtils;
 })();
diff --git a/src/html-printer.js b/src/html-printer.js
index 585d5b66..13f83047 100644
--- a/src/html-printer.js
+++ b/src/html-printer.js
@@ -8,6 +8,7 @@
 (function() {
   var LineByLinePrinter = require('./line-by-line-printer.js').LineByLinePrinter;
   var SideBySidePrinter = require('./side-by-side-printer.js').SideBySidePrinter;
+  var FileListPrinter = require('./file-list-printer.js').FileListPrinter;

   function HtmlPrinter() {
   }
@@ -22,5 +23,10 @@
     return sideBySidePrinter.generateSideBySideJsonHtml(diffFiles);
   };

+  HtmlPrinter.prototype.generateFileListSummary = function(diffJson, config) {
+    var fileListPrinter = new FileListPrinter(config);
+    return fileListPrinter.generateFileList(diffJson);
+  };
+
   module.exports.HtmlPrinter = new HtmlPrinter();
 })();
diff --git a/src/line-by-line-printer.js b/src/line-by-line-printer.js
index b07eb53c..d230bedd 100644
--- a/src/line-by-line-printer.js
+++ b/src/line-by-line-printer.js
@@ -11,7 +11,8 @@
   var utils = require('./utils.js').Utils;
   var Rematch = require('./rematch.js').Rematch;

-  var hoganUtils = require('./hoganjs-utils.js').HoganJsUtils;
+  var hoganUtils;
+
   var genericTemplatesPath = 'generic';
   var baseTemplatesPath = 'line-by-line';
   var iconsBaseTemplatesPath = 'icon';
@@ -19,6 +20,9 @@

   function LineByLinePrinter(config) {
     this.config = config;
+
+    var HoganJsUtils = require('./hoganjs-utils.js').HoganJsUtils;
+    hoganUtils = new HoganJsUtils(config);
   }

   LineByLinePrinter.prototype.makeFileDiffHtml = function(file, diffs) {
diff --git a/src/side-by-side-printer.js b/src/side-by-side-printer.js
index bbf1dc8d..5e3033b3 100644
--- a/src/side-by-side-printer.js
+++ b/src/side-by-side-printer.js
@@ -11,7 +11,8 @@
   var utils = require('./utils.js').Utils;
   var Rematch = require('./rematch.js').Rematch;

-  var hoganUtils = require('./hoganjs-utils.js').HoganJsUtils;
+  var hoganUtils;
+
   var genericTemplatesPath = 'generic';
   var baseTemplatesPath = 'side-by-side';
   var iconsBaseTemplatesPath = 'icon';
@@ -26,6 +27,9 @@

   function SideBySidePrinter(config) {
     this.config = config;
+
+    var HoganJsUtils = require('./hoganjs-utils.js').HoganJsUtils;
+    hoganUtils = new HoganJsUtils(config);
   }

   SideBySidePrinter.prototype.makeDiffHtml = function(file, diffs) {
diff --git a/test/file-list-printer-tests.js b/test/file-list-printer-tests.js
index a502a46f..60ea3208 100644
--- a/test/file-list-printer-tests.js
+++ b/test/file-list-printer-tests.js
@@ -1,6 +1,6 @@
 var assert = require('assert');

-var fileListPrinter = require('../src/file-list-printer.js').FileListPrinter;
+var fileListPrinter = new (require('../src/file-list-printer.js').FileListPrinter)();

 describe('FileListPrinter', function() {
   describe('generateFileList', function() {
diff --git a/test/hogan-cache-tests.js b/test/hogan-cache-tests.js
index 190bf6f8..3bb754ac 100644
--- a/test/hogan-cache-tests.js
+++ b/test/hogan-cache-tests.js
@@ -1,6 +1,6 @@
 var assert = require('assert');

-var HoganJsUtils = require('../src/hoganjs-utils.js').HoganJsUtils;
+var HoganJsUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)();
 var diffParser = require('../src/diff-parser.js').DiffParser;

 describe('HoganJsUtils', function() {
@@ -21,16 +21,28 @@ describe('HoganJsUtils', function() {
       });
       assert.equal(emptyDiffHtml, result);
     });
+
     it('should render view without cache', function() {
       var result = HoganJsUtils.render('generic', 'empty-diff', {
         contentClass: 'd2h-code-line',
         diffParser: diffParser
       }, {noCache: true});
-      assert.equal(emptyDiffHtml + '\n', result);
+      assert.equal(emptyDiffHtml, result);
     });
+
     it('should return null if template is missing', function() {
-      var result = HoganJsUtils.render('generic', 'missing-template', {}, {noCache: true});
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)({noCache: true});
+      var result = hoganUtils.render('generic', 'missing-template', {});
       assert.equal(null, result);
     });
+
+    it('should allow templates to be overridden', function() {
+      var emptyDiffTemplate = HoganJsUtils.compile('&lt;p&gt;&lt;/p&gt;');
+
+      var config = {templates: {'generic-empty-diff': emptyDiffTemplate}};
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)(config);
+      var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
+      assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
+    });
   });
 });
diff --git a/test/line-by-line-tests.js b/test/line-by-line-tests.js
index 1cd92073..8869b3df 100644
--- a/test/line-by-line-tests.js
+++ b/test/line-by-line-tests.js
@@ -14,7 +14,7 @@ describe('LineByLinePrinter', function() {
         '            File without changes\n' +
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
-        '&lt;/tr&gt;\n';
+        '&lt;/tr&gt;';

       assert.equal(expected, fileHtml);
     });
@@ -422,7 +422,6 @@ describe('LineByLinePrinter', function() {
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
         '&lt;/tr&gt;\n' +
-        '\n' +
         '                &lt;/tbody&gt;\n' +
         '            &lt;/table&gt;\n' +
         '        &lt;/div&gt;\n' +
diff --git a/test/side-by-side-printer-tests.js b/test/side-by-side-printer-tests.js
index 76625f8e..771daaa5 100644
--- a/test/side-by-side-printer-tests.js
+++ b/test/side-by-side-printer-tests.js
@@ -14,7 +14,7 @@ describe('SideBySidePrinter', function() {
         '            File without changes\n' +
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
-        '&lt;/tr&gt;\n';
+        '&lt;/tr&gt;';

       assert.equal(expectedRight, fileHtml.right);
       assert.equal(expectedLeft, fileHtml.left);
@@ -324,7 +324,6 @@ describe('SideBySidePrinter', function() {
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
         '&lt;/tr&gt;\n' +
-        '\n' +
         '                    &lt;/tbody&gt;\n' +
         '                &lt;/table&gt;\n' +
         '            &lt;/div&gt;\n' +

From f3cadb96677d0eb82fc2752dc3ffbf35ca9b5bdb Mon Sep 17 00:00:00 2001
From: Rodrigo Fernandes &lt;rtfrodrigo@gmail.com&gt;
Date: Sat, 15 Oct 2016 13:21:22 +0100
Subject: [PATCH 2/2] Allow uncompiled templates

---
 README.md                 |  3 +++
 src/hoganjs-utils.js      |  7 +++++++
 test/hogan-cache-tests.js | 24 +++++++++++++++++++++++-
 3 files changed, 33 insertions(+), 1 deletion(-)

diff --git a/README.md b/README.md
index 132c8a28..46909f25 100644
--- a/README.md
+++ b/README.md
@@ -98,6 +98,9 @@ The HTML output accepts a Javascript object with configuration. Possible options
   - `synchronisedScroll`: scroll both panes in side-by-side mode: `true` or `false`, default is `false`
   - `matchWordsThreshold`: similarity threshold for word matching, default is 0.25
   - `matchingMaxComparisons`: perform at most this much comparisons for line matching a block of changes, default is `2500`
+  - `templates`: object with previously compiled templates to replace parts of the html
+  - `rawTemplates`: object with raw not compiled templates to replace parts of the html
+  &gt; For more information regarding the possible templates look into [src/templates](https://github.com/rtfpessoa/diff2html/tree/master/src/templates)

 ## Diff2HtmlUI Helper

diff --git a/src/hoganjs-utils.js b/src/hoganjs-utils.js
index 0dda08d7..b2e9c275 100644
--- a/src/hoganjs-utils.js
+++ b/src/hoganjs-utils.js
@@ -17,6 +17,13 @@
   function HoganJsUtils(configuration) {
     this.config = configuration || {};
     extraTemplates = this.config.templates || {};
+
+    var rawTemplates = this.config.rawTemplates || {};
+    for (var templateName in rawTemplates) {
+      if (rawTemplates.hasOwnProperty(templateName)) {
+        if (!extraTemplates[templateName]) extraTemplates[templateName] = this.compile(rawTemplates[templateName]);
+      }
+    }
   }

   HoganJsUtils.prototype.render = function(namespace, view, params) {
diff --git a/test/hogan-cache-tests.js b/test/hogan-cache-tests.js
index 3bb754ac..a34839c0 100644
--- a/test/hogan-cache-tests.js
+++ b/test/hogan-cache-tests.js
@@ -36,7 +36,7 @@ describe('HoganJsUtils', function() {
       assert.equal(null, result);
     });

-    it('should allow templates to be overridden', function() {
+    it('should allow templates to be overridden with compiled templates', function() {
       var emptyDiffTemplate = HoganJsUtils.compile('&lt;p&gt;&lt;/p&gt;');

       var config = {templates: {'generic-empty-diff': emptyDiffTemplate}};
@@ -44,5 +44,27 @@ describe('HoganJsUtils', function() {
       var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
       assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
     });
+
+    it('should allow templates to be overridden with uncompiled templates', function() {
+      var emptyDiffTemplate = '&lt;p&gt;&lt;/p&gt;';
+
+      var config = {rawTemplates: {'generic-empty-diff': emptyDiffTemplate}};
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)(config);
+      var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
+      assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
+    });
+
+    it('should allow templates to be overridden giving priority to compiled templates', function() {
+      var emptyDiffTemplate = HoganJsUtils.compile('&lt;p&gt;&lt;/p&gt;');
+      var emptyDiffTemplateUncompiled = '&lt;p&gt;Not used!&lt;/p&gt;';
+
+      var config = {
+        templates: {'generic-empty-diff': emptyDiffTemplate},
+        rawTemplates: {'generic-empty-diff': emptyDiffTemplateUncompiled}
+      };
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)(config);
+      var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
+      assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
+    });
   });
 });
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[this is how you can display code diffs]]></summary></entry><entry><title type="html">a post with advanced image components</title><link href="https://stevenrotelli.github.io/blog/2024/advanced-images/" rel="alternate" type="text/html" title="a post with advanced image components"/><published>2024-01-27T11:46:00+00:00</published><updated>2024-01-27T11:46:00+00:00</updated><id>https://stevenrotelli.github.io/blog/2024/advanced-images</id><content type="html" xml:base="https://stevenrotelli.github.io/blog/2024/advanced-images/"><![CDATA[<p>This is an example post with advanced image components.</p> <h2 id="image-slider">Image Slider</h2> <p>This is a simple image slider. It uses the <a href="https://swiperjs.com/">Swiper</a> library. Check the <a href="https://swiperjs.com/demos">examples page</a> for more information of what you can achieve with it.</p> <swiper-container keyboard="true" navigation="true" pagination="true" pagination-clickable="true" pagination-dynamic-bullets="true" rewind="true"> <swiper-slide> <figure> <picture> <img src="/assets/img/9.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <img src="/assets/img/7.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <img src="/assets/img/8.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <img src="/assets/img/10.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <img src="/assets/img/12.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> </swiper-container> <h2 id="image-comparison-slider">Image Comparison Slider</h2> <p>This is a simple image comparison slider. It uses the <a href="https://img-comparison-slider.sneas.io/">img-comparison-slider</a> library. Check the <a href="https://img-comparison-slider.sneas.io/examples.html">examples page</a> for more information of what you can achieve with it.</p> <img-comparison-slider> <figure slot="first"> <picture> <img src="/assets/img/prof_pic.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <img src="/assets/img/prof_pic_color.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> &lt;/picture&gt; &lt;/figure&gt; --&gt; </img-comparison-slider>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="images"/><summary type="html"><![CDATA[this is what advanced image components could look like]]></summary></entry><entry><title type="html">a post with vega lite</title><link href="https://stevenrotelli.github.io/blog/2024/vega-lite/" rel="alternate" type="text/html" title="a post with vega lite"/><published>2024-01-27T00:20:00+00:00</published><updated>2024-01-27T00:20:00+00:00</updated><id>https://stevenrotelli.github.io/blog/2024/vega-lite</id><content type="html" xml:base="https://stevenrotelli.github.io/blog/2024/vega-lite/"><![CDATA[<p>This is an example post with some <a href="https://vega.github.io/vega-lite/">vega lite</a> code.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">vega_lite
</span><span class="sb">{
  "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
  "description": "A dot plot showing each movie in the database, and the difference from the average movie rating. The display is sorted by year to visualize everything in sequential order. The graph is for all Movies before 2019.",
  "data": {
    "url": "https://raw.githubusercontent.com/vega/vega/main/docs/data/movies.json"
  },
  "transform": [
    {"filter": "datum['IMDB Rating'] != null"},
    {"filter": {"timeUnit": "year", "field": "Release Date", "range": [null, 2019]}},
    {
      "joinaggregate": [{
        "op": "mean",
        "field": "IMDB Rating",
        "as": "AverageRating"
      }]
    },
    {
      "calculate": "datum['IMDB Rating'] - datum.AverageRating",
      "as": "RatingDelta"
    }
  ],
  "mark": "point",
  "encoding": {
    "x": {
      "field": "Release Date",
      "type": "temporal"
    },
    "y": {
      "field": "RatingDelta",
      "type": "quantitative",
      "title": "Rating Delta"
    },
    "color": {
      "field": "RatingDelta",
      "type": "quantitative",
      "scale": {"domainMid": 0},
      "title": "Rating Delta"
    }
  }
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-vega_lite">{
  "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
  "description": "A dot plot showing each movie in the database, and the difference from the average movie rating. The display is sorted by year to visualize everything in sequential order. The graph is for all Movies before 2019.",
  "data": {
    "url": "https://raw.githubusercontent.com/vega/vega/main/docs/data/movies.json"
  },
  "transform": [
    {"filter": "datum['IMDB Rating'] != null"},
    {"filter": {"timeUnit": "year", "field": "Release Date", "range": [null, 2019]}},
    {
      "joinaggregate": [{
        "op": "mean",
        "field": "IMDB Rating",
        "as": "AverageRating"
      }]
    },
    {
      "calculate": "datum['IMDB Rating'] - datum.AverageRating",
      "as": "RatingDelta"
    }
  ],
  "mark": "point",
  "encoding": {
    "x": {
      "field": "Release Date",
      "type": "temporal"
    },
    "y": {
      "field": "RatingDelta",
      "type": "quantitative",
      "title": "Rating Delta"
    },
    "color": {
      "field": "RatingDelta",
      "type": "quantitative",
      "scale": {"domainMid": 0},
      "title": "Rating Delta"
    }
  }
}
</code></pre> <p>This plot supports both light and dark themes.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="charts"/><summary type="html"><![CDATA[this is what included vega lite code could look like]]></summary></entry><entry><title type="html">a post with geojson</title><link href="https://stevenrotelli.github.io/blog/2024/geojson-map/" rel="alternate" type="text/html" title="a post with geojson"/><published>2024-01-26T17:57:00+00:00</published><updated>2024-01-26T17:57:00+00:00</updated><id>https://stevenrotelli.github.io/blog/2024/geojson-map</id><content type="html" xml:base="https://stevenrotelli.github.io/blog/2024/geojson-map/"><![CDATA[<p>This is an example post with some <a href="https://geojson.org/">geojson</a> code. The support is provided thanks to <a href="https://leafletjs.com/">Leaflet</a>. To create your own visualization, go to <a href="https://geojson.io/">geojson.io</a>.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">geojson
</span><span class="sb">{
  "type": "FeatureCollection",
  "features": [
    {
      "type": "Feature",
      "properties": {},
      "geometry": {
        "coordinates": [
          [
            [
              -60.11363029935569,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -2.904625022183211
            ]
          ]
        ],
        "type": "Polygon"
      }
    }
  ]
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-geojson">{
  "type": "FeatureCollection",
  "features": [
    {
      "type": "Feature",
      "properties": {},
      "geometry": {
        "coordinates": [
          [
            [
              -60.11363029935569,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -2.904625022183211
            ]
          ]
        ],
        "type": "Polygon"
      }
    }
  ]
}
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="charts"/><category term="maps"/><summary type="html"><![CDATA[this is what included geojson code could look like]]></summary></entry></feed>